import{u as _e,a as Tt,b as Ut,j as R,d as zt}from"./fiber-DLnro_FV.js";import{r as T,R as kt}from"./react-4ldeB94U.js";import{o as K,p as pe,U as V,q as P,c as D,D as Ot,r as Ht,s as Gt,t as Lt,E as De,u as _t,v as Et,w as k,x as te,F as Pe,y as le,z as Vt,C as ve,S as Fe,d as Kt,G as Wt,H as W,I as f,J as X,K as ce,X as fe,Y as jt,M as yt,T as Mt,Z as Ct,P as bt,B as Zt,_ as Ie,$ as se,N as Xt,a0 as Qt,V as Z,Q as Be,a1 as Yt,n as $t,a2 as qt}from"./three-BIBagZx2.js";import{i as Jt}from"./drei-BQFFepro.js";/**
 * postprocessing v6.36.3 build Thu Sep 26 2024
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2024 Raoul van RÃ¼schen
 * @license Zlib
 */var Se=1/1e3,es=1e3,ts=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(e){typeof document<"u"&&document.hidden!==void 0&&(e?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=e)}get delta(){return this._delta*Se}get fixedDelta(){return this._fixedDelta*Se}set fixedDelta(e){this._fixedDelta=e*es}get elapsed(){return this._elapsed*Se}update(e){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(e!==void 0?e:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(e){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},ss=(()=>{const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]),s=new Zt;return s.setAttribute("position",new Ie(e,3)),s.setAttribute("uv",new Ie(t,2)),s})(),A=class Ee{static get fullscreenGeometry(){return ss}constructor(t="Pass",s=new Fe,r=new Kt){this.name=t,this.renderer=null,this.scene=s,this.camera=r,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(t){if(this.rtt===t){const s=this.fullscreenMaterial;s!==null&&(s.needsUpdate=!0),this.rtt=!t}}set mainScene(t){}set mainCamera(t){}setRenderer(t){this.renderer=t}isEnabled(){return this.enabled}setEnabled(t){this.enabled=t}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(t){let s=this.screen;s!==null?s.material=t:(s=new Wt(Ee.fullscreenGeometry,t),s.frustumCulled=!1,this.scene===null&&(this.scene=new Fe),this.scene.add(s),this.screen=s)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(t){this.fullscreenMaterial=t}getDepthTexture(){return null}setDepthTexture(t,s=k){}render(t,s,r,i,n){throw new Error("Render method not implemented!")}setSize(t,s){}initialize(t,s,r){}dispose(){for(const t of Object.keys(this)){const s=this[t];(s instanceof K||s instanceof yt||s instanceof Mt||s instanceof Ee)&&this[t].dispose()}this.fullscreenMaterial!==null&&this.fullscreenMaterial.dispose()}},rs=class extends A{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(e,t,s,r,i){const n=e.state.buffers.stencil;n.setLocked(!1),n.setTest(!1)}},is=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,me="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",Dt=class extends W{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new f(null),opacity:new f(1)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:is,vertexShader:me})}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},Pt=class extends A{constructor(e,t=!0){super("CopyPass"),this.fullscreenMaterial=new Dt,this.needsSwap=!1,this.renderTarget=e,e===void 0&&(this.renderTarget=new K(1,1,{minFilter:pe,magFilter:pe,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=t}get resize(){return this.autoResize}set resize(e){this.autoResize=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.autoResize=e}render(e,t,s,r,i){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.autoResize&&this.renderTarget.setSize(e,t)}initialize(e,t,s){s!==void 0&&(this.renderTarget.texture.type=s,s!==V?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":e!==null&&e.outputColorSpace===P&&(this.renderTarget.texture.colorSpace=P))}},Ue=new ve,Bt=class extends A{constructor(e=!0,t=!0,s=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=s,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(e,t,s){this.color=e,this.depth=t,this.stencil=s}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(e){this.overrideClearColor=e}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(e){this.overrideClearAlpha=e}render(e,t,s,r,i){const n=this.overrideClearColor,a=this.overrideClearAlpha,o=e.getClearAlpha(),l=n!==null,u=a>=0;l?(e.getClearColor(Ue),e.setClearColor(n,u?a:o)):u&&e.setClearAlpha(a),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),l?e.setClearColor(Ue,o):u&&e.setClearAlpha(o)}},ns=class extends A{constructor(e,t){super("MaskPass",e,t),this.needsSwap=!1,this.clearPass=new Bt(!1,!1,!0),this.inverse=!1}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get inverted(){return this.inverse}set inverted(e){this.inverse=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(e){this.inverted=e}render(e,t,s,r,i){const n=e.getContext(),a=e.state.buffers,o=this.scene,l=this.camera,u=this.clearPass,c=this.inverted?0:1,h=1-c;a.color.setMask(!1),a.depth.setMask(!1),a.color.setLocked(!0),a.depth.setLocked(!0),a.stencil.setTest(!0),a.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),a.stencil.setFunc(n.ALWAYS,c,4294967295),a.stencil.setClear(h),a.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?u.render(e,null):(u.render(e,t),u.render(e,s))),this.renderToScreen?(e.setRenderTarget(null),e.render(o,l)):(e.setRenderTarget(t),e.render(o,l),e.setRenderTarget(s),e.render(o,l)),a.color.setLocked(!1),a.depth.setLocked(!1),a.stencil.setLocked(!1),a.stencil.setFunc(n.EQUAL,1,4294967295),a.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),a.stencil.setLocked(!0)}},as=class{constructor(t=null,{depthBuffer:s=!0,stencilBuffer:r=!1,multisampling:i=0,frameBufferType:n}={}){this.renderer=null,this.inputBuffer=this.createBuffer(s,r,n,i),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new Pt,this.depthTexture=null,this.passes=[],this.timer=new ts,this.autoRenderToScreen=!0,this.setRenderer(t)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(t){const s=this.inputBuffer,r=this.multisampling;r>0&&t>0?(this.inputBuffer.samples=t,this.outputBuffer.samples=t,this.inputBuffer.dispose(),this.outputBuffer.dispose()):r!==t&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(s.depthBuffer,s.stencilBuffer,s.texture.type,t),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(t){if(this.renderer=t,t!==null){const s=t.getSize(new D),r=t.getContext().getContextAttributes().alpha,i=this.inputBuffer.texture.type;i===V&&t.outputColorSpace===P&&(this.inputBuffer.texture.colorSpace=P,this.outputBuffer.texture.colorSpace=P,this.inputBuffer.dispose(),this.outputBuffer.dispose()),t.autoClear=!1,this.setSize(s.width,s.height);for(const n of this.passes)n.initialize(t,r,i)}}replaceRenderer(t,s=!0){const r=this.renderer,i=r.domElement.parentNode;return this.setRenderer(t),s&&i!==null&&(i.removeChild(r.domElement),i.appendChild(t.domElement)),r}createDepthTexture(){const t=this.depthTexture=new Ot;return this.inputBuffer.depthTexture=t,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(t.format=Ht,t.type=Gt):t.type=Lt,t}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const t of this.passes)t.setDepthTexture(null)}}createBuffer(t,s,r,i){const n=this.renderer,a=n===null?new D:n.getDrawingBufferSize(new D),o={minFilter:pe,magFilter:pe,stencilBuffer:s,depthBuffer:t,type:r},l=new K(a.width,a.height,o);return i>0&&(l.ignoreDepthForMultisampleCopy=!1,l.samples=i),r===V&&n!==null&&n.outputColorSpace===P&&(l.texture.colorSpace=P),l.texture.name="EffectComposer.Buffer",l.texture.generateMipmaps=!1,l}setMainScene(t){for(const s of this.passes)s.mainScene=t}setMainCamera(t){for(const s of this.passes)s.mainCamera=t}addPass(t,s){const r=this.passes,i=this.renderer,n=i.getDrawingBufferSize(new D),a=i.getContext().getContextAttributes().alpha,o=this.inputBuffer.texture.type;if(t.setRenderer(i),t.setSize(n.width,n.height),t.initialize(i,a,o),this.autoRenderToScreen&&(r.length>0&&(r[r.length-1].renderToScreen=!1),t.renderToScreen&&(this.autoRenderToScreen=!1)),s!==void 0?r.splice(s,0,t):r.push(t),this.autoRenderToScreen&&(r[r.length-1].renderToScreen=!0),t.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const l=this.createDepthTexture();for(t of r)t.setDepthTexture(l)}else t.setDepthTexture(this.depthTexture)}removePass(t){const s=this.passes,r=s.indexOf(t);if(r!==-1&&s.splice(r,1).length>0){if(this.depthTexture!==null){const a=(l,u)=>l||u.needsDepthTexture;s.reduce(a,!1)||(t.getDepthTexture()===this.depthTexture&&t.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&r===s.length&&(t.renderToScreen=!1,s.length>0&&(s[s.length-1].renderToScreen=!0))}}removeAllPasses(){const t=this.passes;this.deleteDepthTexture(),t.length>0&&(this.autoRenderToScreen&&(t[t.length-1].renderToScreen=!1),this.passes=[])}render(t){const s=this.renderer,r=this.copyPass;let i=this.inputBuffer,n=this.outputBuffer,a=!1,o,l,u;t===void 0&&(this.timer.update(),t=this.timer.getDelta());for(const c of this.passes)c.enabled&&(c.render(s,i,n,t,a),c.needsSwap&&(a&&(r.renderToScreen=c.renderToScreen,o=s.getContext(),l=s.state.buffers.stencil,l.setFunc(o.NOTEQUAL,1,4294967295),r.render(s,i,n,t,a),l.setFunc(o.EQUAL,1,4294967295)),u=i,i=n,n=u),c instanceof ns?a=!0:c instanceof rs&&(a=!1))}setSize(t,s,r){const i=this.renderer,n=i.getSize(new D);(t===void 0||s===void 0)&&(t=n.width,s=n.height),(n.width!==t||n.height!==s)&&i.setSize(t,s,r);const a=i.getDrawingBufferSize(new D);this.inputBuffer.setSize(a.width,a.height),this.outputBuffer.setSize(a.width,a.height);for(const o of this.passes)o.setSize(a.width,a.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const t of this.passes)t.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose(),A.fullscreenGeometry.dispose()}},H={NONE:0,DEPTH:1,CONVOLUTION:2},v={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},os=class{constructor(){this.shaderParts=new Map([[v.FRAGMENT_HEAD,null],[v.FRAGMENT_MAIN_UV,null],[v.FRAGMENT_MAIN_IMAGE,null],[v.VERTEX_HEAD,null],[v.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=H.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=_t}},Te=!1,ze=class{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(e),this.meshCount=0,this.replaceMaterial=t=>{if(t.isMesh){let s;if(t.material.flatShading)switch(t.material.side){case fe:s=this.materialsFlatShadedDoubleSide;break;case ce:s=this.materialsFlatShadedBackSide;break;default:s=this.materialsFlatShaded;break}else switch(t.material.side){case fe:s=this.materialsDoubleSide;break;case ce:s=this.materialsBackSide;break;default:s=this.materials;break}this.originalMaterials.set(t,t.material),t.isSkinnedMesh?t.material=s[2]:t.isInstancedMesh?t.material=s[1]:t.material=s[0],++this.meshCount}}}cloneMaterial(e){if(!(e instanceof W))return e.clone();const t=e.uniforms,s=new Map;for(const i in t){const n=t[i].value;n.isRenderTargetTexture&&(t[i].value=null,s.set(i,n))}const r=e.clone();for(const i of s)t[i[0]].value=i[1],r.uniforms[i[0]].value=i[1];return r}setMaterial(e){if(this.disposeMaterials(),this.material=e,e!==null){const t=this.materials=[this.cloneMaterial(e),this.cloneMaterial(e),this.cloneMaterial(e)];for(const s of t)s.uniforms=Object.assign({},e.uniforms),s.side=jt;t[2].skinning=!0,this.materialsBackSide=t.map(s=>{const r=this.cloneMaterial(s);return r.uniforms=Object.assign({},e.uniforms),r.side=ce,r}),this.materialsDoubleSide=t.map(s=>{const r=this.cloneMaterial(s);return r.uniforms=Object.assign({},e.uniforms),r.side=fe,r}),this.materialsFlatShaded=t.map(s=>{const r=this.cloneMaterial(s);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r}),this.materialsFlatShadedBackSide=t.map(s=>{const r=this.cloneMaterial(s);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r.side=ce,r}),this.materialsFlatShadedDoubleSide=t.map(s=>{const r=this.cloneMaterial(s);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r.side=fe,r})}}render(e,t,s){const r=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,Te){const i=this.originalMaterials;this.meshCount=0,t.traverse(this.replaceMaterial),e.render(t,s);for(const n of i)n[0].material=n[1];this.meshCount!==i.size&&i.clear()}else{const i=t.overrideMaterial;t.overrideMaterial=this.material,e.render(t,s),t.overrideMaterial=i}e.shadowMap.enabled=r}disposeMaterials(){if(this.material!==null){const e=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const t of e)t.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return Te}static set workaroundEnabled(e){Te=e}},j=-1,N=class extends De{constructor(e,t=j,s=j,r=1){super(),this.resizable=e,this.baseSize=new D(1,1),this.preferredSize=new D(t,s),this.target=this.preferredSize,this.s=r,this.effectiveSize=new D,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const e=this.baseSize,t=this.preferredSize,s=this.effectiveSize,r=this.scale;t.width!==j?s.width=t.width:t.height!==j?s.width=Math.round(t.height*(e.width/Math.max(e.height,1))):s.width=Math.round(e.width*r),t.height!==j?s.height=t.height:t.width!==j?s.height=Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):s.height=Math.round(e.height*r)}get width(){return this.effectiveSize.width}set width(e){this.preferredWidth=e}get height(){return this.effectiveSize.height}set height(e){this.preferredHeight=e}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(e){this.s!==e&&(this.s=e,this.preferredSize.setScalar(j),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(e){this.scale=e}get baseWidth(){return this.baseSize.width}set baseWidth(e){this.baseSize.width!==e&&(this.baseSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(e){this.baseWidth=e}get baseHeight(){return this.baseSize.height}set baseHeight(e){this.baseSize.height!==e&&(this.baseSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(e){this.baseHeight=e}setBaseSize(e,t){(this.baseSize.width!==e||this.baseSize.height!==t)&&(this.baseSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(e){this.preferredSize.width!==e&&(this.preferredSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(e){this.preferredWidth=e}get preferredHeight(){return this.preferredSize.height}set preferredHeight(e){this.preferredSize.height!==e&&(this.preferredSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(e){this.preferredHeight=e}setPreferredSize(e,t){(this.preferredSize.width!==e||this.preferredSize.height!==t)&&(this.preferredSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(e){this.s=e.scale,this.baseSize.set(e.baseWidth,e.baseHeight),this.preferredSize.set(e.preferredWidth,e.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return j}},p={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},ls="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}",us="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}",cs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}",fs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",hs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}",ds="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}",ps="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}",vs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}",ms="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}",gs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}",xs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}",Ss="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}",Ts="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}",_s="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}",Es="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}",ys="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}",Ms="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}",Cs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}",bs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}",Ds="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Ps="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}",Bs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}",ws="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",Rs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}",As="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}",Ns="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}",Fs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Is="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}",Us="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}",zs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",ks="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}",Os="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}",Hs=new Map([[p.ADD,ls],[p.ALPHA,us],[p.AVERAGE,cs],[p.COLOR,fs],[p.COLOR_BURN,hs],[p.COLOR_DODGE,ds],[p.DARKEN,ps],[p.DIFFERENCE,vs],[p.DIVIDE,ms],[p.DST,null],[p.EXCLUSION,gs],[p.HARD_LIGHT,xs],[p.HARD_MIX,Ss],[p.HUE,Ts],[p.INVERT,_s],[p.INVERT_RGB,Es],[p.LIGHTEN,ys],[p.LINEAR_BURN,Ms],[p.LINEAR_DODGE,Cs],[p.LINEAR_LIGHT,bs],[p.LUMINOSITY,Ds],[p.MULTIPLY,Ps],[p.NEGATION,Bs],[p.NORMAL,ws],[p.OVERLAY,Rs],[p.PIN_LIGHT,As],[p.REFLECT,Ns],[p.SATURATION,Fs],[p.SCREEN,Is],[p.SOFT_LIGHT,Us],[p.SRC,zs],[p.SUBTRACT,ks],[p.VIVID_LIGHT,Os]]),Gs=class extends De{constructor(e,t=1){super(),this._blendFunction=e,this.opacity=new f(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return Hs.get(this.blendFunction)}},we={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},Ls=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,Vs="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",Ks=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],Ws=class extends W{constructor(e=new se){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new f(null),texelSize:new f(new se),scale:new f(1),kernel:new f(0)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Ls,vertexShader:Vs}),this.setTexelSize(e.x,e.y),this.kernelSize=we.MEDIUM}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.inputBuffer=e}get kernelSequence(){return Ks[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(e){this.uniforms.kernel.value=e}setKernel(e){this.kernel=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t,e*.5,t*.5)}setSize(e,t){const s=1/e,r=1/t;this.uniforms.texelSize.value.set(s,r,s*.5,r*.5)}},js=class extends A{constructor({kernelSize:e=we.MEDIUM,resolutionScale:t=.5,width:s=N.AUTO_SIZE,height:r=N.AUTO_SIZE,resolutionX:i=s,resolutionY:n=r}={}){super("KawaseBlurPass"),this.renderTargetA=new K(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const a=this.resolution=new N(this,i,n,t);a.addEventListener("change",o=>this.setSize(a.baseWidth,a.baseHeight)),this._blurMaterial=new Ws,this._blurMaterial.kernelSize=e,this.copyMaterial=new Dt}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(e){this._blurMaterial=e}get dithering(){return this.copyMaterial.dithering}set dithering(e){this.copyMaterial.dithering=e}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(e){this.blurMaterial.kernelSize=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get scale(){return this.blurMaterial.scale}set scale(e){this.blurMaterial.scale=e}getScale(){return this.blurMaterial.scale}setScale(e){this.blurMaterial.scale=e}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,s,r,i){const n=this.scene,a=this.camera,o=this.renderTargetA,l=this.renderTargetB,u=this.blurMaterial,c=u.kernelSequence;let h=t;this.fullscreenMaterial=u;for(let m=0,g=c.length;m<g;++m){const _=m&1?l:o;u.kernel=c[m],u.inputBuffer=h.texture,e.setRenderTarget(_),e.render(n,a),h=_}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=h.texture,e.setRenderTarget(this.renderToScreen?null:s),e.render(n,a)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t);const r=s.width,i=s.height;this.renderTargetA.setSize(r,i),this.renderTargetB.setSize(r,i),this.blurMaterial.setSize(e,t)}initialize(e,t,s){s!==void 0&&(this.renderTargetA.texture.type=s,this.renderTargetB.texture.type=s,s!==V?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):e!==null&&e.outputColorSpace===P&&(this.renderTargetA.texture.colorSpace=P,this.renderTargetB.texture.colorSpace=P))}static get AUTO_SIZE(){return N.AUTO_SIZE}},ye=class extends De{constructor(e,t,{attributes:s=H.NONE,blendFunction:r=p.NORMAL,defines:i=new Map,uniforms:n=new Map,extensions:a=null,vertexShader:o=null}={}){super(),this.name=e,this.renderer=null,this.attributes=s,this.fragmentShader=t,this.vertexShader=o,this.defines=i,this.uniforms=n,this.extensions=a,this.blendMode=new Gs(r),this.blendMode.addEventListener("change",l=>this.setChanged()),this._inputColorSpace=_t,this._outputColorSpace=Et}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=k){}update(e,t,s){}setSize(e,t){}initialize(e,t,s){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof K||t instanceof yt||t instanceof Mt||t instanceof A)&&this[e].dispose()}}},wt={RED:0,GREEN:1,BLUE:2,ALPHA:3},Re={DISCARD:0,MULTIPLY:1,MULTIPLY_RGB_SET_ALPHA:2,MULTIPLY_RGB:3},Zs=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if PASS == 1
uniform vec4 kernel64[32];
#else
uniform vec4 kernel16[8];
#endif
uniform lowp sampler2D cocBuffer;uniform vec2 texelSize;uniform float scale;varying vec2 vUv;void main(){
#ifdef FOREGROUND
vec2 cocNearFar=texture2D(cocBuffer,vUv).rg*scale;float coc=cocNearFar.x;
#else
float coc=texture2D(cocBuffer,vUv).g*scale;
#endif
if(coc==0.0){gl_FragColor=texture2D(inputBuffer,vUv);}else{
#ifdef FOREGROUND
vec2 step=texelSize*max(cocNearFar.x,cocNearFar.y);
#else
vec2 step=texelSize*coc;
#endif
#if PASS == 1
vec4 acc=vec4(0.0);for(int i=0;i<32;++i){vec4 kernel=kernel64[i];vec2 uv=step*kernel.xy+vUv;acc+=texture2D(inputBuffer,uv);uv=step*kernel.zw+vUv;acc+=texture2D(inputBuffer,uv);}gl_FragColor=acc/64.0;
#else
vec4 maxValue=texture2D(inputBuffer,vUv);for(int i=0;i<8;++i){vec4 kernel=kernel16[i];vec2 uv=step*kernel.xy+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);uv=step*kernel.zw+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);}gl_FragColor=maxValue;
#endif
}}`,he=class extends W{constructor(e=!1,t=!1){super({name:"BokehMaterial",defines:{PASS:e?"2":"1"},uniforms:{inputBuffer:new f(null),cocBuffer:new f(null),texelSize:new f(new D),kernel64:new f(null),kernel16:new f(null),scale:new f(1)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Zs,vertexShader:me}),t&&(this.defines.FOREGROUND="1"),this.generateKernel()}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}set cocBuffer(e){this.uniforms.cocBuffer.value=e}setCoCBuffer(e){this.uniforms.cocBuffer.value=e}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(e){return this.scale}setScale(e){this.scale=e}generateKernel(){const e=2.39996323,t=new Float64Array(128),s=new Float64Array(32);let r=0,i=0;for(let n=0,a=Math.sqrt(80);n<80;++n){const o=n*e,l=Math.sqrt(n)/a,u=l*Math.cos(o),c=l*Math.sin(o);n%5===0?(s[i++]=u,s[i++]=c):(t[r++]=u,t[r++]=c)}this.uniforms.kernel64.value=t,this.uniforms.kernel16.value=s}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}};function ke(e,t,s){return e*(t-s)-t}function Me(e,t,s){return Math.min(Math.max((e+t)/(t-s),0),1)}var Xs=`#include <common>
#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform float focusDistance;uniform float focusRange;uniform float cameraNear;uniform float cameraFar;varying vec2 vUv;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
float depth=unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
float depth=texture2D(depthBuffer,uv).r;
#endif
#ifdef LOG_DEPTH
float d=pow(2.0,depth*log2(cameraFar+1.0))-1.0;float a=cameraFar/(cameraFar-cameraNear);float b=cameraFar*cameraNear/(cameraNear-cameraFar);depth=a+b/d;
#endif
return depth;}void main(){float depth=readDepth(vUv);
#ifdef PERSPECTIVE_CAMERA
float viewZ=perspectiveDepthToViewZ(depth,cameraNear,cameraFar);float linearDepth=viewZToOrthographicDepth(viewZ,cameraNear,cameraFar);
#else
float linearDepth=depth;
#endif
float signedDistance=linearDepth-focusDistance;float magnitude=smoothstep(0.0,focusRange,abs(signedDistance));gl_FragColor.rg=magnitude*vec2(step(signedDistance,0.0),step(0.0,signedDistance));}`,Qs=class extends W{constructor(e){super({name:"CircleOfConfusionMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new f(null),focusDistance:new f(0),focusRange:new f(0),cameraNear:new f(.3),cameraFar:new f(1e3)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Xs,vertexShader:me}),this.uniforms.focalLength=this.uniforms.focusRange,this.copyCameraSettings(e)}get near(){return this.uniforms.cameraNear.value}get far(){return this.uniforms.cameraFar.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=k){this.depthBuffer=e,this.depthPacking=t}get focusDistance(){return this.uniforms.focusDistance.value}set focusDistance(e){this.uniforms.focusDistance.value=e}get worldFocusDistance(){return-ke(this.focusDistance,this.near,this.far)}set worldFocusDistance(e){this.focusDistance=Me(-e,this.near,this.far)}getFocusDistance(e){this.uniforms.focusDistance.value=e}setFocusDistance(e){this.uniforms.focusDistance.value=e}get focalLength(){return this.focusRange}set focalLength(e){this.focusRange=e}get focusRange(){return this.uniforms.focusRange.value}set focusRange(e){this.uniforms.focusRange.value=e}get worldFocusRange(){return-ke(this.focusRange,this.near,this.far)}set worldFocusRange(e){this.focusRange=Me(-e,this.near,this.far)}getFocalLength(e){return this.focusRange}setFocalLength(e){this.focusRange=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof bt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},Ys=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef MASK_PRECISION_HIGH
uniform mediump sampler2D maskTexture;
#else
uniform lowp sampler2D maskTexture;
#endif
#if MASK_FUNCTION != 0
uniform float strength;
#endif
varying vec2 vUv;void main(){
#if COLOR_CHANNEL == 0
float mask=texture2D(maskTexture,vUv).r;
#elif COLOR_CHANNEL == 1
float mask=texture2D(maskTexture,vUv).g;
#elif COLOR_CHANNEL == 2
float mask=texture2D(maskTexture,vUv).b;
#else
float mask=texture2D(maskTexture,vUv).a;
#endif
#if MASK_FUNCTION == 0
#ifdef INVERTED
mask=step(mask,0.0);
#else
mask=1.0-step(mask,0.0);
#endif
#else
mask=clamp(mask*strength,0.0,1.0);
#ifdef INVERTED
mask=1.0-mask;
#endif
#endif
#if MASK_FUNCTION == 3
vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=vec4(mask*texel.rgb,texel.a);
#elif MASK_FUNCTION == 2
gl_FragColor=vec4(mask*texture2D(inputBuffer,vUv).rgb,mask);
#else
gl_FragColor=mask*texture2D(inputBuffer,vUv);
#endif
}`,$s=class extends W{constructor(e=null){super({name:"MaskMaterial",uniforms:{maskTexture:new f(e),inputBuffer:new f(null),strength:new f(1)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Ys,vertexShader:me}),this.colorChannel=wt.RED,this.maskFunction=Re.DISCARD}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}set maskTexture(e){this.uniforms.maskTexture.value=e,delete this.defines.MASK_PRECISION_HIGH,e.type!==V&&(this.defines.MASK_PRECISION_HIGH="1"),this.needsUpdate=!0}setMaskTexture(e){this.maskTexture=e}set colorChannel(e){this.defines.COLOR_CHANNEL=e.toFixed(0),this.needsUpdate=!0}setColorChannel(e){this.colorChannel=e}set maskFunction(e){this.defines.MASK_FUNCTION=e.toFixed(0),this.needsUpdate=!0}setMaskFunction(e){this.maskFunction=e}get inverted(){return this.defines.INVERTED!==void 0}set inverted(e){this.inverted&&!e?delete this.defines.INVERTED:e&&(this.defines.INVERTED="1"),this.needsUpdate=!0}isInverted(){return this.inverted}setInverted(e){this.inverted=e}get strength(){return this.uniforms.strength.value}set strength(e){this.uniforms.strength.value=e}getStrength(){return this.strength}setStrength(e){this.strength=e}},$=class extends A{constructor(e,t="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=e,this.input=t}setInput(e){this.input=e}render(e,t,s,r,i){const n=this.fullscreenMaterial.uniforms;t!==null&&n!==void 0&&n[this.input]!==void 0&&(n[this.input].value=t.texture),e.setRenderTarget(this.renderToScreen?null:s),e.render(this.scene,this.camera)}initialize(e,t,s){s!==void 0&&s!==V&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},qs=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D nearColorBuffer;uniform mediump sampler2D farColorBuffer;
#else
uniform lowp sampler2D nearColorBuffer;uniform lowp sampler2D farColorBuffer;
#endif
uniform lowp sampler2D nearCoCBuffer;uniform lowp sampler2D farCoCBuffer;uniform float scale;void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){vec4 colorNear=texture2D(nearColorBuffer,uv);vec4 colorFar=texture2D(farColorBuffer,uv);
#if MASK_FUNCTION == 1
vec2 cocNearFar=vec2(texture2D(nearCoCBuffer,uv).r,colorFar.a);cocNearFar.x=min(cocNearFar.x*scale,1.0);
#else
vec2 cocNearFar=vec2(texture2D(nearCoCBuffer,uv).r,texture2D(farCoCBuffer,uv).g);cocNearFar=min(cocNearFar*scale,1.0);
#endif
vec4 result=inputColor*(1.0-cocNearFar.y)+colorFar;result=mix(result,colorNear,cocNearFar.x);outputColor=result;}`,Js=class extends ye{constructor(e,{blendFunction:t,worldFocusDistance:s,worldFocusRange:r,focusDistance:i=0,focalLength:n=.1,focusRange:a=n,bokehScale:o=1,resolutionScale:l=1,width:u=N.AUTO_SIZE,height:c=N.AUTO_SIZE,resolutionX:h=u,resolutionY:m=c}={}){super("DepthOfFieldEffect",qs,{blendFunction:t,attributes:H.DEPTH,uniforms:new Map([["nearColorBuffer",new f(null)],["farColorBuffer",new f(null)],["nearCoCBuffer",new f(null)],["farCoCBuffer",new f(null)],["scale",new f(1)]])}),this.camera=e,this.renderTarget=new K(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="DoF.Intermediate",this.renderTargetMasked=this.renderTarget.clone(),this.renderTargetMasked.texture.name="DoF.Masked.Far",this.renderTargetNear=this.renderTarget.clone(),this.renderTargetNear.texture.name="DoF.Bokeh.Near",this.uniforms.get("nearColorBuffer").value=this.renderTargetNear.texture,this.renderTargetFar=this.renderTarget.clone(),this.renderTargetFar.texture.name="DoF.Bokeh.Far",this.uniforms.get("farColorBuffer").value=this.renderTargetFar.texture,this.renderTargetCoC=this.renderTarget.clone(),this.renderTargetCoC.texture.name="DoF.CoC",this.uniforms.get("farCoCBuffer").value=this.renderTargetCoC.texture,this.renderTargetCoCBlurred=this.renderTargetCoC.clone(),this.renderTargetCoCBlurred.texture.name="DoF.CoC.Blurred",this.uniforms.get("nearCoCBuffer").value=this.renderTargetCoCBlurred.texture,this.cocPass=new $(new Qs(e));const g=this.cocMaterial;g.focusDistance=i,g.focusRange=a,s!==void 0&&(g.worldFocusDistance=s),r!==void 0&&(g.worldFocusRange=r),this.blurPass=new js({resolutionScale:l,resolutionX:h,resolutionY:m,kernelSize:we.MEDIUM}),this.maskPass=new $(new $s(this.renderTargetCoC.texture));const _=this.maskPass.fullscreenMaterial;_.colorChannel=wt.GREEN,this.maskFunction=Re.MULTIPLY_RGB,this.bokehNearBasePass=new $(new he(!1,!0)),this.bokehNearBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehNearFillPass=new $(new he(!0,!0)),this.bokehNearFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehFarBasePass=new $(new he(!1,!1)),this.bokehFarBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.bokehFarFillPass=new $(new he(!0,!1)),this.bokehFarFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.target=null;const x=this.resolution=new N(this,h,m,l);x.addEventListener("change",y=>this.setSize(x.baseWidth,x.baseHeight)),this.bokehScale=o}set mainCamera(e){this.camera=e,this.cocMaterial.copyCameraSettings(e)}get cocTexture(){return this.renderTargetCoC.texture}get maskFunction(){return this.maskPass.fullscreenMaterial.maskFunction}set maskFunction(e){this.maskFunction!==e&&(this.defines.set("MASK_FUNCTION",e.toFixed(0)),this.maskPass.fullscreenMaterial.maskFunction=e,this.setChanged())}get cocMaterial(){return this.cocPass.fullscreenMaterial}get circleOfConfusionMaterial(){return this.cocMaterial}getCircleOfConfusionMaterial(){return this.cocMaterial}getBlurPass(){return this.blurPass}getResolution(){return this.resolution}get bokehScale(){return this.uniforms.get("scale").value}set bokehScale(e){this.bokehNearBasePass.fullscreenMaterial.scale=e,this.bokehNearFillPass.fullscreenMaterial.scale=e,this.bokehFarBasePass.fullscreenMaterial.scale=e,this.bokehFarFillPass.fullscreenMaterial.scale=e,this.maskPass.fullscreenMaterial.strength=e,this.uniforms.get("scale").value=e}getBokehScale(){return this.bokehScale}setBokehScale(e){this.bokehScale=e}getTarget(){return this.target}setTarget(e){this.target=e}calculateFocusDistance(e){const t=this.camera,s=t.position.distanceTo(e);return Me(-s,t.near,t.far)}setDepthTexture(e,t=k){this.cocMaterial.depthBuffer=e,this.cocMaterial.depthPacking=t}update(e,t,s){const r=this.renderTarget,i=this.renderTargetCoC,n=this.renderTargetCoCBlurred,a=this.renderTargetMasked;if(this.target!==null){const o=this.calculateFocusDistance(this.target);this.cocMaterial.focusDistance=o}this.cocPass.render(e,null,i),this.blurPass.render(e,i,n),this.maskPass.render(e,t,a),this.bokehFarBasePass.render(e,a,r),this.bokehFarFillPass.render(e,r,this.renderTargetFar),this.bokehNearBasePass.render(e,t,r),this.bokehNearFillPass.render(e,r,this.renderTargetNear)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t);const r=s.width,i=s.height;this.cocPass.setSize(e,t),this.blurPass.setSize(e,t),this.maskPass.setSize(e,t),this.renderTargetFar.setSize(e,t),this.renderTargetCoC.setSize(e,t),this.renderTargetMasked.setSize(e,t),this.renderTarget.setSize(r,i),this.renderTargetNear.setSize(r,i),this.renderTargetCoCBlurred.setSize(r,i),this.bokehNearBasePass.fullscreenMaterial.setSize(e,t),this.bokehNearFillPass.fullscreenMaterial.setSize(e,t),this.bokehFarBasePass.fullscreenMaterial.setSize(e,t),this.bokehFarFillPass.fullscreenMaterial.setSize(e,t)}initialize(e,t,s){this.cocPass.initialize(e,t,s),this.maskPass.initialize(e,t,s),this.bokehNearBasePass.initialize(e,t,s),this.bokehNearFillPass.initialize(e,t,s),this.bokehFarBasePass.initialize(e,t,s),this.bokehFarFillPass.initialize(e,t,s),this.blurPass.initialize(e,t,V),e.capabilities.logarithmicDepthBuffer&&(this.cocPass.fullscreenMaterial.defines.LOG_DEPTH="1"),s!==void 0&&(this.renderTarget.texture.type=s,this.renderTargetNear.texture.type=s,this.renderTargetFar.texture.type=s,this.renderTargetMasked.texture.type=s,e!==null&&e.outputColorSpace===P&&(this.renderTarget.texture.colorSpace=P,this.renderTargetNear.texture.colorSpace=P,this.renderTargetFar.texture.colorSpace=P,this.renderTargetMasked.texture.colorSpace=P))}},Rt=class extends A{constructor(e,t,s=null){super("RenderPass",e,t),this.needsSwap=!1,this.clearPass=new Bt,this.overrideMaterialManager=s===null?null:new ze(s),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){const e=this.overrideMaterialManager;return e!==null?e.material:null}set overrideMaterial(e){const t=this.overrideMaterialManager;e!==null?t!==null?t.setMaterial(e):this.overrideMaterialManager=new ze(e):t!==null&&(t.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(e){this.overrideMaterial=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getSelection(){return this.selection}setSelection(e){this.selection=e}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(e){this.ignoreBackground=e}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(e){this.skipShadowMapUpdate=e}getClearPass(){return this.clearPass}render(e,t,s,r,i){const n=this.scene,a=this.camera,o=this.selection,l=a.layers.mask,u=n.background,c=e.shadowMap.autoUpdate,h=this.renderToScreen?null:t;o!==null&&a.layers.set(o.getLayer()),this.skipShadowMapUpdate&&(e.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(n.background=null),this.clearPass.enabled&&this.clearPass.render(e,t),e.setRenderTarget(h),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(e,n,a):e.render(n,a),a.layers.mask=l,n.background=u,e.shadowMap.autoUpdate=c}},oe={FULL:0,SINGLE:1},er=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,tr="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",sr=class extends W{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new f(null),normalBuffer:new f(null),texelSize:new f(new D)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:er,vertexShader:tr})}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=k){this.depthBuffer=e,this.depthPacking=t}set normalBuffer(e){this.uniforms.normalBuffer.value=e,e!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(e){this.normalBuffer=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},rr=class extends A{constructor({normalBuffer:e=null,resolutionScale:t=.5,width:s=N.AUTO_SIZE,height:r=N.AUTO_SIZE,resolutionX:i=s,resolutionY:n=r}={}){super("DepthDownsamplingPass");const a=new sr;a.normalBuffer=e,this.fullscreenMaterial=a,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new K(1,1,{minFilter:te,magFilter:te,depthBuffer:!1,type:Pe}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const o=this.resolution=new N(this,i,n,t);o.addEventListener("change",l=>this.setSize(o.baseWidth,o.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(e,t=k){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t}render(e,t,s,r,i){e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height),this.fullscreenMaterial.setSize(e,t)}initialize(e,t,s){const r=e.getContext();if(!(r.getExtension("EXT_color_buffer_float")||r.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},ir=`#include <packing>
varying vec2 vUv;
#ifdef NORMAL_DEPTH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D normalDepthBuffer;
#else
uniform mediump sampler2D normalDepthBuffer;
#endif
float readDepth(const in vec2 uv){return texture2D(normalDepthBuffer,uv).a;}
#else
#if INPUT_DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
float readDepth(const in vec2 uv){
#if INPUT_DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}
#endif
void main(){
#if INPUT_DEPTH_PACKING == OUTPUT_DEPTH_PACKING
gl_FragColor=texture2D(depthBuffer,vUv);
#else
float depth=readDepth(vUv);
#if OUTPUT_DEPTH_PACKING == 3201
gl_FragColor=(depth==1.0)?vec4(1.0):packDepthToRGBA(depth);
#else
gl_FragColor=vec4(vec3(depth),1.0);
#endif
#endif
}`,nr=`varying vec2 vUv;
#if DEPTH_COPY_MODE == 1
uniform vec2 texelPosition;
#endif
void main(){
#if DEPTH_COPY_MODE == 1
vUv=texelPosition;
#else
vUv=position.xy*0.5+0.5;
#endif
gl_Position=vec4(position.xy,1.0,1.0);}`,ar=class extends W{constructor(){super({name:"DepthCopyMaterial",defines:{INPUT_DEPTH_PACKING:"0",OUTPUT_DEPTH_PACKING:"0",DEPTH_COPY_MODE:"0"},uniforms:{depthBuffer:new f(null),texelPosition:new f(new D)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:ir,vertexShader:nr}),this.depthCopyMode=oe.FULL}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set inputDepthPacking(e){this.defines.INPUT_DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}get outputDepthPacking(){return Number(this.defines.OUTPUT_DEPTH_PACKING)}set outputDepthPacking(e){this.defines.OUTPUT_DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=k){this.depthBuffer=e,this.inputDepthPacking=t}getInputDepthPacking(){return Number(this.defines.INPUT_DEPTH_PACKING)}setInputDepthPacking(e){this.defines.INPUT_DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}getOutputDepthPacking(){return Number(this.defines.OUTPUT_DEPTH_PACKING)}setOutputDepthPacking(e){this.defines.OUTPUT_DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}get texelPosition(){return this.uniforms.texelPosition.value}getTexelPosition(){return this.uniforms.texelPosition.value}setTexelPosition(e){this.uniforms.texelPosition.value=e}get mode(){return this.depthCopyMode}set mode(e){this.depthCopyMode=e,this.defines.DEPTH_COPY_MODE=e.toFixed(0),this.needsUpdate=!0}getMode(){return this.mode}setMode(e){this.mode=e}},or=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,lr="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",ur=class extends W{constructor(e,t,s,r,i=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:Ct.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new f(null),depthBuffer:new f(null),resolution:new f(new D),texelSize:new f(new D),cameraNear:new f(.3),cameraFar:new f(1e3),aspect:new f(1),time:new f(0)},blending:X,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:i}),e&&this.setShaderParts(e),t&&this.setDefines(t),s&&this.setUniforms(s),this.copyCameraSettings(r)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=k){this.depthBuffer=e,this.depthPacking=t}setShaderData(e){this.setShaderParts(e.shaderParts),this.setDefines(e.defines),this.setUniforms(e.uniforms),this.setExtensions(e.extensions)}setShaderParts(e){return this.fragmentShader=or.replace(v.FRAGMENT_HEAD,e.get(v.FRAGMENT_HEAD)||"").replace(v.FRAGMENT_MAIN_UV,e.get(v.FRAGMENT_MAIN_UV)||"").replace(v.FRAGMENT_MAIN_IMAGE,e.get(v.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=lr.replace(v.VERTEX_HEAD,e.get(v.VERTEX_HEAD)||"").replace(v.VERTEX_MAIN_SUPPORT,e.get(v.VERTEX_MAIN_SUPPORT)||""),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(e){this.encodeOutput!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(e){return this.encodeOutput}setOutputEncodingEnabled(e){this.encodeOutput=e}get time(){return this.uniforms.time.value}set time(e){this.uniforms.time.value=e}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof bt?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const s=this.uniforms;s.resolution.value.set(e,t),s.texelSize.value.set(1/e,1/t),s.aspect.value=e/t}static get Section(){return v}},cr=class extends A{constructor({depthPacking:e=le}={}){super("DepthCopyPass");const t=new ar;t.outputDepthPacking=e,this.fullscreenMaterial=t,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new K(1,1,{type:e===le?V:Pe,minFilter:te,magFilter:te,depthBuffer:!1}),this.renderTarget.texture.name="DepthCopyPass.Target"}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}get depthPacking(){return this.fullscreenMaterial.outputDepthPacking}getDepthPacking(){return this.fullscreenMaterial.outputDepthPacking}setDepthTexture(e,t=k){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.inputDepthPacking=t}render(e,t,s,r,i){e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.renderTarget.setSize(e,t)}},fr=Number(Ct.replace(/\D+/g,"")),Y=255/256,hr=new Float32Array([Y/256**3,Y/256**2,Y/256,Y]),dr=new Float32Array([Y,Y/256,Y/256**2,1/256**3]);function pr(e){const t=fr>=167?dr:hr;return(e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3])/255}var vr=class extends cr{constructor({depthPacking:e=le,mode:t=oe.SINGLE}={}){if(e!==le&&e!==k)throw new Error(`Unsupported depth packing: ${e}`);super({depthPacking:e}),this.name="DepthPickingPass",this.fullscreenMaterial.mode=t,this.pixelBuffer=e===le?new Uint8Array(4):new Float32Array(4),this.callback=null}readDepth(e){return this.fullscreenMaterial.texelPosition.set(e.x*.5+.5,e.y*.5+.5),new Promise(t=>{this.callback=t})}render(e,t,s,r,i){const n=this.fullscreenMaterial,a=n.mode;if(a===oe.FULL&&super.render(e),this.callback!==null){const o=this.renderTarget,l=this.pixelBuffer,u=o.texture.type!==Pe;let c=0,h=0;if(a===oe.SINGLE)super.render(e);else{const m=n.texelPosition;c=Math.round(m.x*o.width),h=Math.round(m.y*o.height)}e.readRenderTargetPixels(o,c,h,1,1,l),this.callback(u?pr(l):l[0]),this.callback=null}}setSize(e,t){this.fullscreenMaterial.mode===oe.FULL&&super.setSize(e,t)}};function Oe(e,t,s){for(const r of t){const i="$1"+e+r.charAt(0).toUpperCase()+r.slice(1),n=new RegExp("([^\\.])(\\b"+r+"\\b)","g");for(const a of s.entries())a[1]!==null&&s.set(a[0],a[1].replace(n,i))}}function mr(e,t,s){let r=t.getFragmentShader(),i=t.getVertexShader();const n=r!==void 0&&/mainImage/.test(r),a=r!==void 0&&/mainUv/.test(r);if(s.attributes|=t.getAttributes(),r===void 0)throw new Error(`Missing fragment shader (${t.name})`);if(a&&s.attributes&H.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${t.name})`);if(!n&&!a)throw new Error(`Could not find mainImage or mainUv function (${t.name})`);{const o=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,l=s.shaderParts;let u=l.get(v.FRAGMENT_HEAD)||"",c=l.get(v.FRAGMENT_MAIN_UV)||"",h=l.get(v.FRAGMENT_MAIN_IMAGE)||"",m=l.get(v.VERTEX_HEAD)||"",g=l.get(v.VERTEX_MAIN_SUPPORT)||"";const _=new Set,x=new Set;if(a&&(c+=`	${e}MainUv(UV);
`,s.uvTransformation=!0),i!==null&&/mainSupport/.test(i)){const S=/mainSupport *\([\w\s]*?uv\s*?\)/.test(i);g+=`	${e}MainSupport(`,g+=S?`vUv);
`:`);
`;for(const d of i.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const M of d[1].split(/\s*,\s*/))s.varyings.add(M),_.add(M),x.add(M);for(const d of i.matchAll(o))x.add(d[1])}for(const S of r.matchAll(o))x.add(S[1]);for(const S of t.defines.keys())x.add(S.replace(/\([\w\s,]*\)/g,""));for(const S of t.uniforms.keys())x.add(S);x.delete("while"),x.delete("for"),x.delete("if"),t.uniforms.forEach((S,d)=>s.uniforms.set(e+d.charAt(0).toUpperCase()+d.slice(1),S)),t.defines.forEach((S,d)=>s.defines.set(e+d.charAt(0).toUpperCase()+d.slice(1),S));const y=new Map([["fragment",r],["vertex",i]]);Oe(e,x,s.defines),Oe(e,x,y),r=y.get("fragment"),i=y.get("vertex");const E=t.blendMode;if(s.blendModes.set(E.blendFunction,E),n){t.inputColorSpace!==null&&t.inputColorSpace!==s.colorSpace&&(h+=t.inputColorSpace===P?`color0 = sRGBTransferOETF(color0);
	`:`color0 = sRGBToLinear(color0);
	`),t.outputColorSpace!==Et?s.colorSpace=t.outputColorSpace:t.inputColorSpace!==null&&(s.colorSpace=t.inputColorSpace);const S=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;h+=`${e}MainImage(color0, UV, `,s.attributes&H.DEPTH&&S.test(r)&&(h+="depth, ",s.readDepth=!0),h+=`color1);
	`;const d=e+"BlendOpacity";s.uniforms.set(d,E.opacity),h+=`color0 = blend${E.blendFunction}(color0, color1, ${d});

	`,u+=`uniform float ${d};

`}if(u+=r+`
`,i!==null&&(m+=i+`
`),l.set(v.FRAGMENT_HEAD,u),l.set(v.FRAGMENT_MAIN_UV,c),l.set(v.FRAGMENT_MAIN_IMAGE,h),l.set(v.VERTEX_HEAD,m),l.set(v.VERTEX_MAIN_SUPPORT,g),t.extensions!==null)for(const S of t.extensions)s.extensions.add(S)}}var gr=class extends A{constructor(e,...t){super("EffectPass"),this.fullscreenMaterial=new ur(null,null,null,e),this.listener=s=>this.handleEvent(s),this.effects=[],this.setEffects(t),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(e){for(const t of this.effects)t.mainScene=e}set mainCamera(e){this.fullscreenMaterial.copyCameraSettings(e);for(const t of this.effects)t.mainCamera=e}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(e){this.fullscreenMaterial.encodeOutput=e}get dithering(){return this.fullscreenMaterial.dithering}set dithering(e){const t=this.fullscreenMaterial;t.dithering=e,t.needsUpdate=!0}setEffects(e){for(const t of this.effects)t.removeEventListener("change",this.listener);this.effects=e.sort((t,s)=>s.attributes-t.attributes);for(const t of this.effects)t.addEventListener("change",this.listener)}updateMaterial(){const e=new os;let t=0;for(const a of this.effects)if(a.blendMode.blendFunction===p.DST)e.attributes|=a.getAttributes()&H.DEPTH;else{if(e.attributes&a.getAttributes()&H.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${a.name})`);mr("e"+t++,a,e)}let s=e.shaderParts.get(v.FRAGMENT_HEAD),r=e.shaderParts.get(v.FRAGMENT_MAIN_IMAGE),i=e.shaderParts.get(v.FRAGMENT_MAIN_UV);const n=/\bblend\b/g;for(const a of e.blendModes.values())s+=a.getShaderCode().replace(n,`blend${a.blendFunction}`)+`
`;e.attributes&H.DEPTH?(e.readDepth&&(r=`float depth = readDepth(UV);

	`+r),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,e.colorSpace===P&&(r+=`color0 = sRGBToLinear(color0);
	`),e.uvTransformation?(i=`vec2 transformedUv = vUv;
`+i,e.defines.set("UV","transformedUv")):e.defines.set("UV","vUv"),e.shaderParts.set(v.FRAGMENT_HEAD,s),e.shaderParts.set(v.FRAGMENT_MAIN_IMAGE,r),e.shaderParts.set(v.FRAGMENT_MAIN_UV,i);for(const[a,o]of e.shaderParts)o!==null&&e.shaderParts.set(a,o.trim().replace(/^#/,`
#`));this.skipRendering=t===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(e)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(e,t=k){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t;for(const s of this.effects)s.setDepthTexture(e,t)}render(e,t,s,r,i){for(const n of this.effects)n.update(e,t,r);if(!this.skipRendering||this.renderToScreen){const n=this.fullscreenMaterial;n.inputBuffer=t.texture,n.time+=r*this.timeScale,e.setRenderTarget(this.renderToScreen?null:s),e.render(this.scene,this.camera)}}setSize(e,t){this.fullscreenMaterial.setSize(e,t);for(const s of this.effects)s.setSize(e,t)}initialize(e,t,s){this.renderer=e;for(const r of this.effects)r.initialize(e,t,s);this.updateMaterial(),s!==void 0&&s!==V&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.removeEventListener("change",this.listener),e.dispose()}handleEvent(e){switch(e.type){case"change":this.recompile();break}}},xr=class extends A{constructor(e,t,{renderTarget:s,resolutionScale:r=1,width:i=N.AUTO_SIZE,height:n=N.AUTO_SIZE,resolutionX:a=i,resolutionY:o=n}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new Rt(e,t,new Vt);const l=this.renderPass;l.ignoreBackground=!0,l.skipShadowMapUpdate=!0;const u=l.getClearPass();u.overrideClearColor=new ve(7829503),u.overrideClearAlpha=1,this.renderTarget=s,this.renderTarget===void 0&&(this.renderTarget=new K(1,1,{minFilter:te,magFilter:te}),this.renderTarget.texture.name="NormalPass.Target");const c=this.resolution=new N(this,a,o,r);c.addEventListener("change",h=>this.setSize(c.baseWidth,c.baseHeight))}set mainScene(e){this.renderPass.mainScene=e}set mainCamera(e){this.renderPass.mainCamera=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,s,r,i){const n=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,n,n)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height)}};const Ae=T.createContext(null),He=e=>(e.getAttributes()&H.CONVOLUTION)===H.CONVOLUTION,Wr=kt.memo(T.forwardRef(({children:e,camera:t,scene:s,resolutionScale:r,enabled:i=!0,renderPriority:n=1,autoClear:a=!0,depthBuffer:o,enableNormalPass:l,stencilBuffer:u,multisampling:c=8,frameBufferType:h=Qt},m)=>{const{gl:g,scene:_,camera:x,size:y}=_e(),E=s||_,S=t||x,[d,M,C]=T.useMemo(()=>{const F=Jt(),B=new as(g,{depthBuffer:o,stencilBuffer:u,multisampling:c>0&&F?c:0,frameBufferType:h});B.addPass(new Rt(E,S));let w=null,U=null;return l&&(U=new xr(E,S),U.enabled=!1,B.addPass(U),r!==void 0&&F&&(w=new rr({normalBuffer:U.texture,resolutionScale:r}),w.enabled=!1,B.addPass(w))),[B,U,w]},[S,g,o,u,c,h,E,l,r]);T.useEffect(()=>d==null?void 0:d.setSize(y.width,y.height),[d,y]),Tt((F,B)=>{if(i){const w=g.autoClear;g.autoClear=a,u&&!a&&g.clearStencil(),d.render(B),g.autoClear=w}},i?n:0);const G=T.useRef(null),O=Ut(G);T.useLayoutEffect(()=>{const F=[];if(G.current&&O.current&&d){const B=O.current.objects;for(let w=0;w<B.length;w++){const U=B[w];if(U instanceof ye){const Ne=[U];if(!He(U)){let xe=null;for(;(xe=B[w+1])instanceof ye&&!He(xe);)Ne.push(xe),w++}const It=new gr(S,...Ne);F.push(It)}else U instanceof A&&F.push(U)}for(const w of F)d==null||d.addPass(w);M&&(M.enabled=!0),C&&(C.enabled=!0)}return()=>{for(const B of F)d==null||d.removePass(B);M&&(M.enabled=!1),C&&(C.enabled=!1)}},[d,e,S,M,C,O]),T.useEffect(()=>{const F=g.toneMapping;return g.toneMapping=Xt,()=>{g.toneMapping=F}},[]);const ge=T.useMemo(()=>({composer:d,normalPass:M,downSamplingPass:C,resolutionScale:r,camera:S,scene:E}),[d,M,C,r,S,E]);return T.useImperativeHandle(m,()=>d,[d]),R.jsx(Ae.Provider,{value:ge,children:R.jsx("group",{ref:G,children:e})})}));function ue(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function Ce(e,t){(t==null||t>e.length)&&(t=e.length);for(var s=0,r=new Array(t);s<t;s++)r[s]=e[s];return r}function Sr(e,t){if(e){if(typeof e=="string")return Ce(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);if(s==="Object"&&e.constructor&&(s=e.constructor.name),s==="Map"||s==="Set")return Array.from(e);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return Ce(e,t)}}function Tr(e){if(Array.isArray(e))return Ce(e)}function _r(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function Er(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function yr(e){return Tr(e)||_r(e)||Sr(e)||Er()}new D;new D;function Mr(e,t,s){return Math.max(t,Math.min(s,e))}function Cr(e,t){return Mr(e-Math.floor(e/t)*t,0,t)}function br(e,t){var s=Cr(t-e,Math.PI*2);return s>Math.PI&&(s-=Math.PI*2),s}function At(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var I=function e(t,s,r){var i=this;At(this,e),ue(this,"dot2",function(n,a){return i.x*n+i.y*a}),ue(this,"dot3",function(n,a,o){return i.x*n+i.y*a+i.z*o}),this.x=t,this.y=s,this.z=r},Dr=[new I(1,1,0),new I(-1,1,0),new I(1,-1,0),new I(-1,-1,0),new I(1,0,1),new I(-1,0,1),new I(1,0,-1),new I(-1,0,-1),new I(0,1,1),new I(0,-1,1),new I(0,1,-1),new I(0,-1,-1)],Ge=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],Le=new Array(512),Ve=new Array(512),Pr=function(t){t>0&&t<1&&(t*=65536),t=Math.floor(t),t<256&&(t|=t<<8);for(var s=0;s<256;s++){var r;s&1?r=Ge[s]^t&255:r=Ge[s]^t>>8&255,Le[s]=Le[s+256]=r,Ve[s]=Ve[s+256]=Dr[r%12]}};Pr(0);function Br(e){if(typeof e=="number")e=Math.abs(e);else if(typeof e=="string"){var t=e;e=0;for(var s=0;s<t.length;s++)e=(e+(s+1)*(t.charCodeAt(s)%96))%2147483647}return e===0&&(e=311),e}function Ke(e){var t=Br(e);return function(){var s=t*48271%2147483647;return t=s,s/2147483647}}var wr=function e(t){var s=this;At(this,e),ue(this,"seed",0),ue(this,"init",function(r){s.seed=r,s.value=Ke(r)}),ue(this,"value",Ke(this.seed)),this.init(t)};new wr(Math.random());var Rr=function(t){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:.01,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:1/(2*Math.PI);return r/Math.atan(1/s)*Math.atan(Math.sin(2*Math.PI*t*i)/s)},Nt=function(t){return 1/(1+t+.48*t*t+.235*t*t*t)};function b(e,t,s){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:.25,i=arguments.length>4&&arguments[4]!==void 0?arguments[4]:.01,n=arguments.length>5&&arguments[5]!==void 0?arguments[5]:1/0,a=arguments.length>6&&arguments[6]!==void 0?arguments[6]:Nt,o=arguments.length>7&&arguments[7]!==void 0?arguments[7]:.001,l="velocity_"+t;if(e.__damp===void 0&&(e.__damp={}),e.__damp[l]===void 0&&(e.__damp[l]=0),Math.abs(e[t]-s)<=o)return e[t]=s,!1;r=Math.max(1e-4,r);var u=2/r,c=a(u*i),h=e[t]-s,m=s,g=n*r;h=Math.min(Math.max(h,-g),g),s=e[t]-h;var _=(e.__damp[l]+u*h)*i;e.__damp[l]=(e.__damp[l]-u*_)*c;var x=s+(h+_)*c;return m-e[t]>0==x>m&&(x=m,e.__damp[l]=(x-m)/i),e[t]=x,!0}function ee(e,t,s,r,i,n,a,o){return b(e,t,e[t]+br(e[t],s),r,i,n,a,o)}var re=new D,We,je;function Ar(e,t,s,r,i,n,a){return typeof t=="number"?re.setScalar(t):Array.isArray(t)?re.set(t[0],t[1]):re.copy(t),We=b(e,"x",re.x,s,r,i,n,a),je=b(e,"y",re.y,s,r,i,n,a),We||je}var q=new Z,Ze,Xe,Qe;function be(e,t,s,r,i,n,a){return typeof t=="number"?q.setScalar(t):Array.isArray(t)?q.set(t[0],t[1],t[2]):q.copy(t),Ze=b(e,"x",q.x,s,r,i,n,a),Xe=b(e,"y",q.y,s,r,i,n,a),Qe=b(e,"z",q.z,s,r,i,n,a),Ze||Xe||Qe}var Q=new se,Ye,$e,qe,Je;function Nr(e,t,s,r,i,n,a){return typeof t=="number"?Q.setScalar(t):Array.isArray(t)?Q.set(t[0],t[1],t[2],t[3]):Q.copy(t),Ye=b(e,"x",Q.x,s,r,i,n,a),$e=b(e,"y",Q.y,s,r,i,n,a),qe=b(e,"z",Q.z,s,r,i,n,a),Je=b(e,"w",Q.w,s,r,i,n,a),Ye||$e||qe||Je}var ie=new Yt,et,tt,st;function Fr(e,t,s,r,i,n,a){return Array.isArray(t)?ie.set(t[0],t[1],t[2],t[3]):ie.copy(t),et=ee(e,"x",ie.x,s,r,i,n,a),tt=ee(e,"y",ie.y,s,r,i,n,a),st=ee(e,"z",ie.z,s,r,i,n,a),et||tt||st}var J=new ve,rt,it,nt;function Ir(e,t,s,r,i,n,a){return t instanceof ve?J.copy(t):Array.isArray(t)?J.setRGB(t[0],t[1],t[2]):J.set(t),rt=b(e,"r",J.r,s,r,i,n,a),it=b(e,"g",J.g,s,r,i,n,a),nt=b(e,"b",J.b,s,r,i,n,a),rt||it||nt}var z=new Be,L=new se,at=new se,ne=new se,ot,lt,ut,ct;function Ft(e,t,s,r,i,n,a){var o=e;Array.isArray(t)?z.set(t[0],t[1],t[2],t[3]):z.copy(t);var l=e.dot(z)>0?1:-1;return z.x*=l,z.y*=l,z.z*=l,z.w*=l,ot=b(e,"x",z.x,s,r,i,n,a),lt=b(e,"y",z.y,s,r,i,n,a),ut=b(e,"z",z.z,s,r,i,n,a),ct=b(e,"w",z.w,s,r,i,n,a),L.set(e.x,e.y,e.z,e.w).normalize(),at.set(o.__damp.velocity_x,o.__damp.velocity_y,o.__damp.velocity_z,o.__damp.velocity_w),ne.copy(L).multiplyScalar(at.dot(L)/L.dot(L)),o.__damp.velocity_x-=ne.x,o.__damp.velocity_y-=ne.y,o.__damp.velocity_z-=ne.z,o.__damp.velocity_w-=ne.w,e.set(L.x,L.y,L.z,L.w),ot||lt||ut||ct}var ae=new $t,ft,ht,dt;function Ur(e,t,s,r,i,n,a){return Array.isArray(t)?ae.set(t[0],t[1],t[2]):ae.copy(t),ft=b(e,"radius",ae.radius,s,r,i,n,a),ht=ee(e,"phi",ae.phi,s,r,i,n,a),dt=ee(e,"theta",ae.theta,s,r,i,n,a),ft||ht||dt}var de=new qt,pt=new Z,vt=new Be,mt=new Z,gt,xt,St;function zr(e,t,s,r,i,n,a){var o=e;return o.__damp===void 0&&(o.__damp={position:new Z,rotation:new Be,scale:new Z},e.decompose(o.__damp.position,o.__damp.rotation,o.__damp.scale)),Array.isArray(t)?de.set.apply(de,yr(t)):de.copy(t),de.decompose(pt,vt,mt),gt=be(o.__damp.position,pt,s,r,i,n,a),xt=Ft(o.__damp.rotation,vt,s,r,i,n,a),St=be(o.__damp.scale,mt,s,r,i,n,a),e.compose(o.__damp.position,o.__damp.rotation,o.__damp.scale),gt||xt||St}var kr=Object.freeze({__proto__:null,rsqw:Rr,exp:Nt,damp:b,dampAngle:ee,damp2:Ar,damp3:be,damp4:Nr,dampE:Fr,dampC:Ir,dampQ:Ft,dampS:Ur,dampM:zr});const Or=T.forwardRef(function({blendFunction:t,worldFocusDistance:s,worldFocusRange:r,focusDistance:i,focusRange:n,focalLength:a,bokehScale:o,resolutionScale:l,resolutionX:u,resolutionY:c,width:h,height:m,target:g,depthTexture:_,...x},y){const{camera:E}=T.useContext(Ae),S=g!=null,d=T.useMemo(()=>{const M=new Js(E,{blendFunction:t,worldFocusDistance:s,worldFocusRange:r,focusDistance:i,focusRange:n,focalLength:a,bokehScale:o,resolutionScale:l,resolutionX:u,resolutionY:c,width:h,height:m});S&&(M.target=new Z),_&&M.setDepthTexture(_.texture,_.packing);const C=M.maskPass;return C.maskFunction=Re.MULTIPLY_RGB_SET_ALPHA,M},[E,t,s,r,i,n,a,o,l,u,c,h,m,S,_]);return T.useEffect(()=>()=>{d.dispose()},[d]),R.jsx("primitive",{...x,ref:y,object:d,target:g})}),jr=T.forwardRef(({target:e=void 0,mouse:t=!1,debug:s=void 0,manual:r=!1,smoothTime:i=.25,...n},a)=>{const o=T.useRef(null),l=T.useRef(null),u=T.useRef(null),c=_e(({scene:C})=>C),h=_e(({pointer:C})=>C),{composer:m,camera:g}=T.useContext(Ae),[_]=T.useState(()=>new vr),[x]=T.useState(()=>new Pt);T.useEffect(()=>(m.addPass(_),m.addPass(x),()=>{m.removePass(_),m.removePass(x)}),[m,_,x]),T.useEffect(()=>()=>{_.dispose(),x.dispose()},[_,x]);const[y]=T.useState(()=>new Z(0,0,0)),[E]=T.useState(()=>new Z(0,0,0)),S=T.useCallback(async(C,G)=>(E.x=C,E.y=G,E.z=await _.readDepth(E),E.z=E.z*2-1,1-E.z>1e-7?E.unproject(g):!1),[E,_,g]),d=T.useCallback(async(C,G=!0)=>{var O;if(e)y.set(...e);else{const{x:ge,y:F}=t?h:{x:0,y:0},B=await S(ge,F);B&&y.copy(B)}G&&((O=o.current)!=null&&O.target)&&(i>0&&C>0?kr.damp3(o.current.target,y,i,C):o.current.target.copy(y))},[e,y,t,S,i,h]);Tt(async(C,G)=>{var O;r||d(G),l.current&&l.current.position.copy(y),u.current&&((O=o.current)!=null&&O.target)&&u.current.position.copy(o.current.target)});const M=T.useMemo(()=>({dofRef:o,hitpoint:y,update:d}),[y,d]);return T.useImperativeHandle(a,()=>M,[M]),R.jsxs(R.Fragment,{children:[s?zt(R.jsxs(R.Fragment,{children:[R.jsxs("mesh",{ref:l,children:[R.jsx("sphereGeometry",{args:[s,16,16]}),R.jsx("meshBasicMaterial",{color:"#00ff00",opacity:1,transparent:!0,depthWrite:!1})]}),R.jsxs("mesh",{ref:u,children:[R.jsx("sphereGeometry",{args:[s/2,16,16]}),R.jsx("meshBasicMaterial",{color:"#00ff00",opacity:.5,transparent:!0,depthWrite:!1})]})]}),c):null,R.jsx(Or,{ref:o,...n,target:y})]})});export{jr as A,Wr as E};
